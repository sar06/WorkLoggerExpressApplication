{"version":3,"sources":["component/Personal.js","component/Work.js","container/WorkLoggerPage.js","App.js","serviceWorker.js","index.js"],"names":["Personal","props","react_default","a","createElement","personal","totalMinutes","array","sort","b","minutes","map","item","idx","key","id","onClick","delete","description","Work","work","WorkLoggerPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","defineProperty","target","value","state","length","descriptionValid","parseInt","minutesValid","onSubmit","e","preventDefault","newtask","project","axios","post","then","responsetwo","console","log","get","response","personallist","data","task","filter","worklist","totalMinutespersonal","totalWorklist","assign","catch","error","deleteitem","concat","_this2","className","onChange","type","disabled","component_Personal","component_Work","Component","App","container_WorkLoggerPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0195fab.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Personal = (props) => {\n  return (\n    <div>\n      <h1>Personal {props.personal.totalMinutes}</h1>\n      {props.personal.array\n        .sort((a, b) => {\n          return b.minutes - a.minutes\n        })\n        .map((item, idx) => {\n          return (\n            <div key={idx} id={item.id} onClick={()=>{props.delete(item.id)}}>\n              <p>\n                {item.minutes} - {item.description}\n              </p>\n            </div>\n          )\n        })}\n    </div>\n  )\n}\n\nexport default Personal","import React from \"react\"\n\nconst Work = (props) => {\n  return (\n    <div>\n      <h1>Work</h1>\n      {props.work.array\n        .sort((a, b) => {\n          return b.minutes - a.minutes\n        })\n        .map((item, idx) => {\n          return (\n            <div key={idx} id={item.id} onClick={()=>{props.delete(item.id)}}>\n              <div>{props.work.totalMinutes}</div>\n              <p>\n                {item.minutes} - {item.description}\n              </p>\n            </div>\n          )\n        })}\n    </div>\n  )\n}\n\nexport default Work","import React, { Component } from \"react\"\nimport Personal from \"../component/Personal\"\nimport Work from \"../component/Work\"\nimport axios from \"axios\"\n\nclass WorkLoggerPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      description: \"\",\n      descriptionValid: false,\n      minutes: \"\",\n      minutesValid: false,\n      personal: { array: [], totalMinutes: 0 },\n      work: { array: [], totalMinutes: 0 },\n      project: \"Personal\"\n    }\n  }\n\n      //   this.state.work.totalMinutes += parseInt(object.minutes)\n    //   this.setState({ work: this.state.work })\n  componentDidMount(){\n    axios.get(`/gettasks`)\n  .then((response)=>{\n  \n    console.log(response)\n    var personallist = response.data.task.filter(item => item.project === \"Personal\");\n    var worklist = response.data.task.filter(item => item.project === \"Work\");\n\n    var totalMinutespersonal = 0\n    personallist.map((item, idx) => {\n    totalMinutespersonal += parseInt (item.minutes)\n\n    })\n\n    var totalWorklist = 0\n    worklist.map((item, idx) => {\n    totalWorklist += parseInt (item.minutes)\n    })\n    \n\n    var personal = Object.assign({}, this.state.personal)\n    personal.array = personallist\n    personal.totalMinutes = totalMinutespersonal\n\n    var work = Object.assign({}, this.state.work)\n    work.array = worklist\n    work.totalMinutes = totalWorklist\n    this.setState({personal, work})\n    // console.log(personallist)\n    // console.log(worklist)\n    // console.log(totalMinutespersonal)\n    // console.log(totalWorklist)\n\n    \n\n  })\n  .catch((error)=>{console.log(error)})\n  }\n\n\n  handleChange = (event) => {\n    this.setState({ [event.target.id]: event.target.value }, () => {\n      if (this.state.description.length < 5) {\n        this.setState({ descriptionValid: false })\n      } else {\n        this.setState({ descriptionValid: true })\n      }\n      if (parseInt(this.state.minutes) < 0 || parseInt(this.state.minutes) > 240 || this.state.minutes === \"\") {\n        this.setState({ minutesValid: false })\n      } else {\n        this.setState({ minutesValid: true })\n      }\n    })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault()\n    let newtask = {\n      description: this.state.description,\n      minutes: this.state.minutes,\n      project: this.state.project\n    }\n\n    axios\n    .post(`/tasks`,newtask)\n    .then((responsetwo)=>{console.log(responsetwo)\n      axios.get(`/gettasks`)\n      .then((response)=>{\n      \n        console.log(response)\n        var personallist = response.data.task.filter(item => item.project === \"Personal\");\n        var worklist = response.data.task.filter(item => item.project === \"Work\");\n    \n        var totalMinutespersonal = 0\n        personallist.map((item, idx) => {\n        totalMinutespersonal += parseInt (item.minutes)\n    \n        })\n    \n        var totalWorklist = 0\n        worklist.map((item, idx) => {\n        totalWorklist += parseInt (item.minutes)\n        })\n        \n    \n        var personal = Object.assign({}, this.state.personal)\n        personal.array = personallist\n        personal.totalMinutes = totalMinutespersonal\n    \n        var work = Object.assign({}, this.state.work)\n        work.array = worklist\n        work.totalMinutes = totalWorklist\n        this.setState({personal, work})\n        // console.log(personallist)\n        // console.log(worklist)\n        // console.log(totalMinutespersonal)\n        // console.log(totalWorklist)\n    \n        \n    \n      })\n      .catch((error)=>{console.log(error)})\n    \n    })\n    .catch((error)=>{console.log(error)})\n\n    // if (this.state.project === \"Personal\") {\n    //   this.state.personal.array.push(object)\n    //   this.state.personal.totalMinutes += parseInt(object.minutes)\n    //   this.setState({ personal: this.state.personal })\n    // } else {\n    //   this.state.work.array.push(object)\n    //   this.state.work.totalMinutes += parseInt(object.minutes)\n    //   this.setState({ work: this.state.work })\n    // }\n  }\n\n\ndeleteitem = (id) => {\nconsole.log(id)\naxios\n.delete(`/deletetask/${id}`)\n.then((responsetwo)=>{console.log(responsetwo)\n  axios.get(`/gettasks`)\n.then((response)=>{\n\n  console.log(response)\n  var personallist = response.data.task.filter(item => item.project === \"Personal\");\n  var worklist = response.data.task.filter(item => item.project === \"Work\");\n\n  var totalMinutespersonal = 0\n  personallist.map((item, idx) => {\n  totalMinutespersonal += parseInt (item.minutes)\n\n  })\n\n  var totalWorklist = 0\n  worklist.map((item, idx) => {\n  totalWorklist += parseInt (item.minutes)\n  })\n  \n\n  var personal = Object.assign({}, this.state.personal)\n  personal.array = personallist\n  personal.totalMinutes = totalMinutespersonal\n\n  var work = Object.assign({}, this.state.work)\n  work.array = worklist\n  work.totalMinutes = totalWorklist\n  this.setState({personal, work})\n  // console.log(personallist)\n  // console.log(worklist)\n  // console.log(totalMinutespersonal)\n  // console.log(totalWorklist)\n\n  \n\n})\n.catch((error)=>{console.log(error)})\n})\n.catch((error)=>{console.log(error)})\n\n\n\n\n}\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1>Work Logger</h1>\n        <form onSubmit={this.onSubmit}>\n          <label>\n            Project{\" \"}\n            <select id=\"project\" onChange={this.handleChange}>\n              <option value=\"Personal\">Personal</option>\n              <option value=\"Work\">Work</option>\n            </select>\n          </label>\n          <br />\n          <label>\n            Description <input id=\"description\" type=\"text\" onChange={this.handleChange} />{\" \"}\n            {this.state.descriptionValid === false && this.state.description !== \"\" ? (\n              <span>Description is not valid</span>\n            ) : null}\n          </label>\n          <br />\n          <label>\n            Minutes <input id=\"minutes\" type=\"number\" onChange={this.handleChange} />{\" \"}\n            {this.state.minutesValid === false && this.state.minutes !== \"\" ? <span>Minute entry is not valid</span> : null}\n          </label>\n          <br />\n          <button disabled={!this.state.descriptionValid || !this.state.minutesValid}>Add</button>\n        </form>\n        <hr />\n        <div className=\"work-area\">\n          <div className=\"personal\">\n            <Personal personal={this.state.personal} delete={this.deleteitem} />\n          </div>\n          <div className=\"work\">\n            <Work work={this.state.work} delete={this.deleteitem} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default WorkLoggerPage","import React, { Component } from \"react\"\nimport \"./App.css\"\nimport WorkLoggerPage from \"./container/WorkLoggerPage\"\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <WorkLoggerPage />\n      </div>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}